/**
Exploit Pack - Security Framework for Exploit Developers
Copyright 2011 Juan Sacco http://exploitpack.com

This program is free software: you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation, either version 3 
or any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. 
If not, see http://www.gnu.org/licenses/
 **/

package com.exploitpack.project;

import java.io.BufferedReader;
import java.io.FileReader;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.MessageBox;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import org.eclipse.wb.swt.SWTResourceManager;

public class ProjectWindow2 {

	protected Shell shlExploitPack;
	private Text passwordField2;
	private Text passwordField1;
	private Text projectInformation;
	private String projectName;

	public static void main(String[] args) {
		try {
			ProjectWindow2 window = new ProjectWindow2();
			window.open();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * @wbp.parser.entryPoint
	 */
	public void open() {
		Display display = Display.getDefault();
		createContents();
		shlExploitPack.open();
		Rectangle bounds = display.getBounds();
		Rectangle rect = shlExploitPack.getBounds();

		int x = bounds.x + (bounds.width - rect.width) / 2;
		int y = bounds.y + (bounds.height - rect.height) / 2;

		shlExploitPack.setLocation(x, y);

		shlExploitPack.layout();
		while (!shlExploitPack.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	protected void createContents() {
		shlExploitPack = new Shell();
		shlExploitPack.setImage(SWTResourceManager.getImage(ProjectWindow2.class, "/resources/1316133906_package.png"));
		shlExploitPack.setSize(532, 461);
		shlExploitPack.setText("Exploit Pack - New Project");

		Button btnBack = new Button(shlExploitPack, SWT.NONE);
		btnBack.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				ProjectWindow2.this.shlExploitPack.dispose();
				ProjectWindow.main(null);
			}
		});
		btnBack.setBounds(271, 394, 68, 23);
		btnBack.setText("Back");

		Button btnCancel = new Button(shlExploitPack, SWT.NONE);
		btnCancel.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				ProjectWindow2.this.shlExploitPack.dispose();
			}
		});
		btnCancel.setBounds(435, 394, 68, 23);
		btnCancel.setText("Cancel");

		Label label = new Label(shlExploitPack, SWT.SEPARATOR | SWT.HORIZONTAL);
		label.setBounds(0, 383, 527, 2);

		Label lblNewLabel = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel.setBounds(40, 91, 49, 13);
		lblNewLabel.setText("Password:");

		Label lblNewLabel_1 = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel_1.setBounds(40, 179, 88, 13);
		lblNewLabel_1.setText("Repeat Password:");

		passwordField2 = new Text(shlExploitPack, SWT.BORDER | SWT.PASSWORD);
		passwordField2.setBounds(40, 198, 88, 19);

		passwordField1 = new Text(shlExploitPack, SWT.BORDER | SWT.PASSWORD);
		passwordField1.setBounds(40, 108, 88, 19);

		Label lblNewLabel_2 = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel_2.setBounds(182, 91, 159, 13);
		lblNewLabel_2.setText("Your new project information:");

		Label lblNewLabel_3 = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel_3.setBounds(182, 289, 287, 13);
		lblNewLabel_3.setText("This data will remain in your hard disk for future reuse");

		projectInformation = new Text(shlExploitPack, SWT.BORDER | SWT.MULTI);
		projectInformation.setBounds(182, 108, 321, 175);
		// projectInformation.append(projectName.getText());

		Label lblNewLabel_10 = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel_10.setImage(SWTResourceManager.getImage(ProjectWindow.class, "/resources/up.png"));
		lblNewLabel_10.setBounds(0, 0, 527, 57);

		Label label1 = new Label(shlExploitPack, SWT.SEPARATOR | SWT.HORIZONTAL);
		label1.setBounds(0, 58, 527, 2);

		Button btnNext = new Button(shlExploitPack, SWT.NONE);
		btnNext.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				if ((passwordField1.getText().equals(passwordField2.getText())) && (passwordField1.getText() != "") && (passwordField2.getText() != "")) {
					ProjectWindow2.this.shlExploitPack.dispose();
				} else {
					MessageBox messageBox = new MessageBox(shlExploitPack, SWT.ICON_ERROR);
					messageBox.setMessage("Sorry, password doesn't match");
					messageBox.open();
				}
			}
		});
		btnNext.setBounds(345, 394, 68, 23);
		btnNext.setText("Finish");

		try{
			  // Create file 
			  FileReader fstream = new FileReader("log/Sessions.log");
			  BufferedReader in = new BufferedReader(fstream);
			  String stringToAppend;
			  while((stringToAppend = in.readLine()) != null) {
				  projectInformation.append(stringToAppend + "\n" );
			  } 
			  //Close the output stream
			  in.close();
			  }catch (Exception e1){//Catch exception if any
			  System.err.println("Error: " + e1.getMessage());
			  }

	}

	public String getProjectName() {
		return projectName;
	}

	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

}
