/**
Exploit Pack - Security Framework for Exploit Developers
Copyright 2011 Juan Sacco http://exploitpack.com

This program is free software: you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation, either version 3 
or any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. 
If not, see http://www.gnu.org/licenses/
 **/

package com.exploitpack.main;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Tray;
import org.eclipse.swt.widgets.TrayItem;

public class SysTray {
	public static void main(String[] args) {

		// We will need this
		final Display display = Display.getDefault();
		// Retrieves the system tray singleton
		final Tray tray = display.getSystemTray();
		// Creates a new tray item (displayed as an icon)
		final TrayItem item = new TrayItem(tray, 0);

		final Image img = new Image(display, "data/package.png");
		item.setToolTipText("Exploit Pack - Framework.");
		item.setImage(img);

		// The tray item can only receive Selection/DefaultSelection (left
		// click) or
		// MenuDetect (right click) events
		item.addListener(SWT.MenuDetect, new Listener() {
			@Override
			public void handleEvent(org.eclipse.swt.widgets.Event event) {
				// We need a Shell as the parent of our menu
				final Shell shlSysTray = new Shell(event.display);

				// Style must be pop up
				Menu m = new Menu(shlSysTray, SWT.POP_UP);
				// Creates a new menu item that terminates the program
				// when selected
				MenuItem restore = new MenuItem(m, SWT.NONE);
				restore.setText("Check Updates");
				restore.addListener(SWT.Selection, new Listener() {
					@Override
					public void handleEvent(Event event) {
						CheckUpdate.main(null);
						
						
					}
				});
				MenuItem help = new MenuItem(m, SWT.NONE);
				help.setText("Help and Technical Support");
				help.addListener(SWT.Selection, new Listener() {
					@Override
					public void handleEvent(Event event) {
						About.main(null);
					}
				});
				MenuItem about = new MenuItem(m, SWT.NONE);
				about.setText("About Exploit Pack");
				about.addListener(SWT.Selection, new Listener() {
					@Override
					public void handleEvent(Event event) {
						About.main(null);
					}
				});
				MenuItem exit = new MenuItem(m, SWT.NONE);
				exit.setText("Exit");
				exit.addListener(SWT.Selection, new Listener() {
					@Override
					public void handleEvent(Event event) {
						System.exit(0);
					}
				});
				// We need to make the menu visible
				m.setVisible(true);
			};
		});

//		// Wait forever...
//		while (true) {
//			if (!display.readAndDispatch())
//				display.sleep();
		}
	}