package com.exploitpack.main;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.MouseAdapter;
import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.FileDialog;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.MessageBox;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import org.eclipse.wb.swt.SWTResourceManager;

public class Preferences {

	protected Shell shlExploitPack;
	private Text pythonPath;
	private Text modulesFolderPath;
	private Text logFilePath;
	private Text userName;
	private Text password;

	/**
	 * Launch the application.
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		try {
			Preferences window = new Preferences();
			window.open();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Open the window.
	 */
	public void open() {
		Display display = Display.getDefault();
		createContents();
		Rectangle bounds = display.getBounds();
		Rectangle rect = shlExploitPack.getBounds();

		int x = bounds.x + (bounds.width - rect.width) / 2;
		int y = bounds.y + (bounds.height - rect.height) / 2;
		shlExploitPack.setLocation(x, y);

		Button btnCancel = new Button(shlExploitPack, SWT.NONE);
		btnCancel.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				shlExploitPack.dispose();
			}
		});
		btnCancel.setBounds(431, 388, 75, 25);
		btnCancel.setText("Cancel");

		Button btnOk = new Button(shlExploitPack, SWT.NONE);
		btnOk.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				if (pythonPath.getText().equals("")) {
					MessageBox messageBox = new MessageBox(shlExploitPack, SWT.ICON_ERROR | SWT.OK);
					messageBox.setMessage("Sorry, Parameter \"Python Path\" is required");
					messageBox.setText("Config Error");
					messageBox.open();
					return;
				}
				try {
					// Create file
					FileWriter fstream = new FileWriter("data/config/exploitpack.config");
					BufferedWriter out = new BufferedWriter(fstream);
					out.append(pythonPath.getText() + "\r\n");
					out.append(modulesFolderPath.getText() + "\r\n");
					out.append(logFilePath.getText() + "\r\n");
					out.append(userName.getText() + "\r\n");
					out.append(password.getText() + "\r\n");
					// Close the output stream
					out.close();
				} catch (Exception e1) {
					System.err.println("Error: " + e1.getMessage());
				}
				shlExploitPack.dispose();
			}
		});

		btnOk.setBounds(350, 388, 75, 25);
		btnOk.setText("Save");

		Label label = new Label(shlExploitPack, SWT.SEPARATOR | SWT.HORIZONTAL);
		label.setBounds(0, 383, 527, 2);

		logFilePath = new Text(shlExploitPack, SWT.BORDER);
		logFilePath.setBounds(206, 183, 197, 21);

		Label lblNewLabel = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel.setBounds(70, 183, 85, 15);
		lblNewLabel.setText("Log File Path:");

		userName = new Text(shlExploitPack, SWT.BORDER);
		userName.setText("BetaUser");
		userName.setBounds(206, 246, 141, 21);

		Label lblNewLabel_1 = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel_1.setBounds(70, 246, 75, 15);
		lblNewLabel_1.setText("User name:");

		Label lblNewLabel_2 = new Label(shlExploitPack, SWT.NONE);
		lblNewLabel_2.setBounds(70, 281, 55, 15);
		lblNewLabel_2.setText("Password:");

		password = new Text(shlExploitPack, SWT.BORDER | SWT.PASSWORD);
		password.setText("asd123");
		password.setBounds(206, 278, 141, 21);

		modulesFolderPath = new Text(shlExploitPack, SWT.BORDER);
		modulesFolderPath.setBounds(206, 145, 197, 21);

		shlExploitPack.open();
		shlExploitPack.layout();
		while (!shlExploitPack.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	/**
	 * Create contents of the window.
	 */
	protected void createContents() {
		shlExploitPack = new Shell();
		shlExploitPack.setImage(SWTResourceManager.getImage(Preferences.class, "/resources/1316133906_package.png"));
		shlExploitPack.setSize(532, 461);
		shlExploitPack.setText("Exploit Pack - Preferences");

		Label logFilePathSearch = new Label(shlExploitPack, SWT.NONE);
		logFilePathSearch.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseDown(MouseEvent e) {
				FileDialog fileDialog = new FileDialog(shlExploitPack, SWT.OPEN);
				fileDialog.setText("Open");
				String codedir = "data/";
				fileDialog.setFilterPath(codedir);
				String[] filterExt = { "*.exe", "*.*" };
				fileDialog.setFilterExtensions(filterExt);
				String selected = fileDialog.open();
				if (selected == null)
					return;
				// code here to open the file and display
				logFilePath.setText(selected);
			}
		});
		logFilePathSearch.setImage(SWTResourceManager.getImage(Preferences.class, "/resources/folderpath.png"));
		logFilePathSearch.setBackground(SWTResourceManager.getColor(SWT.COLOR_WHITE));
		logFilePathSearch.setBounds(382, 184, 16, 18);

		Label modulesPathSearch = new Label(shlExploitPack, SWT.NONE);
		modulesPathSearch.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseDown(MouseEvent e) {
				FileDialog fileDialog = new FileDialog(shlExploitPack, SWT.OPEN);
				fileDialog.setText("Open");
				String codedir = "data/";
				fileDialog.setFilterPath(codedir);
				String[] filterExt = { "*.exe", "*.*" };
				fileDialog.setFilterExtensions(filterExt);
				String selected = fileDialog.open();
				if (selected == null)
					return;
				// code here to open the file and display
				modulesFolderPath.setText(selected);
			}
		});
		modulesPathSearch.setImage(SWTResourceManager.getImage(Preferences.class, "/resources/folderpath.png"));
		modulesPathSearch.setBackground(SWTResourceManager.getColor(SWT.COLOR_WHITE));
		modulesPathSearch.setBounds(382, 146, 16, 18);

		Label pythonPathSearch = new Label(shlExploitPack, SWT.NONE);
		pythonPathSearch.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseDown(MouseEvent e) {
				FileDialog fileDialog = new FileDialog(shlExploitPack, SWT.OPEN);
				fileDialog.setText("Open");
				String codedir = "data/";
				fileDialog.setFilterPath(codedir);
				String[] filterExt = { "*.exe", "*.*" };
				fileDialog.setFilterExtensions(filterExt);
				String selected = fileDialog.open();
				if (selected == null)
					return;
				// code here to open the file and display
				pythonPath.setText(selected);
			}
		});


		pythonPathSearch.setBackground(SWTResourceManager.getColor(SWT.COLOR_WHITE));
		pythonPathSearch.setImage(SWTResourceManager.getImage(Preferences.class, "/resources/folderpath.png"));
		pythonPathSearch.setBounds(382, 108, 16, 18);

		pythonPath = new Text(shlExploitPack, SWT.BORDER);
		pythonPath.setBounds(206, 107, 197, 21);

		Label titleMarquesine = new Label(shlExploitPack, SWT.NONE);
		titleMarquesine.setImage(SWTResourceManager.getImage(Preferences.class, "/resources/up.png"));
		titleMarquesine.setBounds(0, 0, 527, 57);

		Label label = new Label(shlExploitPack, SWT.SEPARATOR | SWT.HORIZONTAL);
		label.setBounds(0, 58, 527, 2);

		Label lblPythonPath = new Label(shlExploitPack, SWT.NONE);
		lblPythonPath.setBounds(70, 110, 98, 15);
		lblPythonPath.setText("Python - Full Path:");

		Label lblModulesFolder = new Label(shlExploitPack, SWT.NONE);
		lblModulesFolder.setBounds(70, 148, 85, 15);
		lblModulesFolder.setText("Modules Folder:");
		
		// Load if there is any config
				// Read file
				try {
					FileReader fstream = new FileReader("data/config/exploitpack.config");
					BufferedReader in = new BufferedReader(fstream);
					String pythonFullPath = in.readLine() + "\n";
					pythonPath.setText(pythonFullPath);
					// Close the output stream
					in.close();

				} catch (Exception e) {
					MessageBox messageBox = new MessageBox(shlExploitPack, SWT.ICON_ERROR | SWT.OK);
					messageBox.setMessage("Ups!, Parameter \"Python Path\" is required");
					messageBox.setText("Please config this");
					messageBox.open();
					}
	}

}
